import{_ as i,c as p,e as t,o as s}from"./app-D5peQ_E2.js";const a="/images/34C10B8A3DFE4A8C9A958F6615B2C640clipboard.png",l="/images/C52BF9D1342C452DAEA6B56BA775788Eclipboard.png",r="/images/3A7F0CEDB3C446F29F3636DAAD8E1FC0clipboard.png",n="/images/983F8AE5F10948CB8F04556E3086C446clipboard.png",o="/images/580A7657BC5A4898A051ADF9692338C7clipboard.png",d="/images/A7378950AB0B4F5BB2D9E0FA42C971E9clipboard.png",c="/images/4C50BB8CF4AC460FA9F378B085265890clipboard.png",h="/images/1AE610A389994E188A4943764671F8FBclipboard.png",m="/images/2D5D75FC1F9746129AE39594AE97CF5Fclipboard.png",_={};function u(g,e){return s(),p("div",null,e[0]||(e[0]=[t('<h2 id="drf类视图介绍" tabindex="-1"><a class="header-anchor" href="#drf类视图介绍"><span>DRF类视图介绍</span></a></h2><p>在DRF框架中提供了众多的通用视图基类与扩展类，以简化视图的编写。</p><ul><li><p>View：Django默认的视图基类，负责将视图连接到URL，HTTP请求方法的基本调度， 之前写类视图一般都用这个。</p></li><li><p>APIView：DRF提供的所有视图的基类，继承View并扩展，具备了身份认证、权限检查、 流量控制等功能。</p></li><li><p>GenericAPIView：对APIView更高层次的封装，例如增加分页、过滤器</p></li><li><p>GenericViewSet：继承GenericAPIView和ViewSet</p></li><li><p>ViewSet：继承APIView，并结合router自动映射路由</p></li><li><p>ModelViewSet：继承GenericAPIView和五个扩展类，封装好各种请求，更加完善， 业务逻辑基本不用自己写了。</p></li></ul><p><img src="'+a+'" alt=""></p><h2 id="apiview类" tabindex="-1"><a class="header-anchor" href="#apiview类"><span>APIView类</span></a></h2><p>APIView：DRF提供的所有视图的基类，继承View并扩展，具备了身份认证、权限检查、 流量控制等功能。</p><p><img src="'+l+'" alt=""></p><h2 id="request与response" tabindex="-1"><a class="header-anchor" href="#request与response"><span>Request与Response</span></a></h2><p>DRF传入视图的request对象不再是Django默认的HttpRequest对象，而是基于 HttpRequest类扩展后的Request类的对象。</p><p>Request对象的数据是自动根据前端发送的数据统一解析数据格式。</p><p>常用属性：</p><ul><li><p>request.data：返回POST提交的数据，与request.POST类似</p></li><li><p>request.query_params：返回GET URL参数，与request.GET类似</p></li></ul><p>DRF提供了一个响应类Reponse，响应的数据会自动转换符合前端的JSON数据格式。</p><p>导入：</p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rest_framework</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">response </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Response</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>格式：</p><p>Response(data, status=None, template_name=None, headers=None, content_type=None)</p><ul><li><p>data：响应序列化处理后的数据，传递python对象</p></li><li><p>status：状态码，默认200</p></li><li><p>template_name：模板名称</p></li><li><p>headers：用于响应头信息的字典</p></li><li><p>content_type：响应数据的类型</p></li></ul><p>使用方法：return Reponse(data=data, status=status.HTTP_404_NOT_FOUND)</p><p>为了方便设置状态码，rest_framework.status模块提供了所有HTTP状态码，以下是一些 常用的：</p><ul><li><p>HTTP_200_OK：请求成功</p></li><li><p>HTTP_301_MOVED_PERMANENTLY：永久重定向</p></li><li><p>HTTP_302_FOUND：临时重定向</p></li><li><p>HTTP_304_NOT_MODIFIED：请求的资源未修改</p></li><li><p>HTTP_403_FORBIDDEN：没有权限访问</p></li><li><p>HTTP_404_NOT_FOUND：页面没有发现</p></li><li><p>HTTP_500_INTERNAL_SERVER_ERROR：服务器内部错误</p></li><li><p>HTTP_502_BAD_GATEWAY：网关错误</p></li><li><p>HTTP_503_SERVICE_UNAVAILABLE：服务器不可达</p></li><li><p>HTTP_504_GATEWAY_TIMEOUT：网关超时</p></li></ul><h2 id="genericapiview类" tabindex="-1"><a class="header-anchor" href="#genericapiview类"><span>GenericAPIView类</span></a></h2><p>GenericAPIView对APIView更高层次的封装，实现以下功能：</p><ul><li><p>增加queryset属性，指定操作的数据，不用再将数据传给序列化器，会自动实现。</p></li><li><p>增加serializer_class属性，直接指定使用的序列化器</p></li><li><p>增加过滤器属性：filter_backends • 增加分页属性：pagination_class</p></li><li><p>增加lookup_field属性和实现get_object()方法：用于获取单条数据，可自定义默认分组名（pk）</p></li></ul><p><img src="'+r+'" alt=""></p><h2 id="viewset类" tabindex="-1"><a class="header-anchor" href="#viewset类"><span>ViewSet类</span></a></h2><p>GenericAPIView已经完成了许多功能，但会有一个问题，获取所有用户列表和单个用户需 要分别定义两个视图和URL路由，使用ViewSet可以很好解决这个问题，并且实现了路由自 动映射。</p><p>ViewSet视图集不再实现get()、post()等方法，而是实现以下请求方法动作：</p><ul><li><p>list()：获取所有数据</p></li><li><p>retrieve()：获取单个数据</p></li><li><p>create()：创建数据</p></li><li><p>update()：更新数据</p></li><li><p>destory()：删除数据</p></li></ul><p><img src="'+n+'" alt=""></p><p>在路由这块定义与之前方式一样，每个API接口都要写一条URL路由，但实际上我们用ViewSet 后，就不用自己设计URL路由及绑定HTTP方法了，会自动处理URL路由映射。</p><p><img src="'+o+'" alt=""></p><p>然后访问http://ip/myapp_api/api 就可以看到自动生成的URL路由。</p><h2 id="modelviewset类" tabindex="-1"><a class="header-anchor" href="#modelviewset类"><span>ModelViewSet类</span></a></h2><p>ModelViewSet继承GenericAPIView和五个扩展类，封装好各种请求，更加完善，业务逻 辑基本不用自己写了，只需要指定serializer_class和queryset，就可以直接进行增删改查。</p><p><img src="'+d+'" alt=""></p><p><img src="'+c+'" alt=""></p><p><img src="'+h+'" alt=""></p><p>由于ModelViewSet有较高的抽象，实现自动增删改查功能。对于增、改在很多场景无法 满足需求，这就需要重写对应方法了。</p><p><img src="'+m+'" alt=""></p>',40)]))}const w=i(_,[["render",u],["__file","3.drf视图.html.vue"]]),E=JSON.parse(`{"path":"/notes/django/upgrade/3.drf%E8%A7%86%E5%9B%BE.html","title":"drf视图","lang":"zh-CN","frontmatter":{"title":"drf视图","date":"2024-05-03T08:45:32.000Z","type":"categories","categories":"DRF","tag":"DRF","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;const isDark = um === 'dark' || (um !== 'light' && sm);document.documentElement.dataset.theme = isDark ? 'dark' : 'light';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"DRF类视图介绍","slug":"drf类视图介绍","link":"#drf类视图介绍","children":[]},{"level":2,"title":"APIView类","slug":"apiview类","link":"#apiview类","children":[]},{"level":2,"title":"Request与Response","slug":"request与response","link":"#request与response","children":[]},{"level":2,"title":"GenericAPIView类","slug":"genericapiview类","link":"#genericapiview类","children":[]},{"level":2,"title":"ViewSet类","slug":"viewset类","link":"#viewset类","children":[]},{"level":2,"title":"ModelViewSet类","slug":"modelviewset类","link":"#modelviewset类","children":[]}],"readingTime":{"minutes":3.17,"words":951},"filePathRelative":"notes/django/upgrade/3.drf视图.md"}`);export{w as comp,E as data};
